<html>
<head>
<title>Dom's Pizza</title>
<meta charset="utf-8">
<style>
table {margin: auto; 
        border: 35px solid red; 
		width: 500px; 
		border-spacing: 0;
		background-color:yellow; 
}
td, th { padding: 15px; 
         font-family: Consolas, sans-serif;
         border-style: solid; 
}
caption { font-family: Verdana, sans-serif;
          font-weight: bold;
		  font-size: 1.2em; 
		  padding-bottom: 15px; 
}
.altrow { }
</style>


<body>



<table id="customers"> 

  <caption>    Welcome <?php echo $_POST["myName"]; ?> </caption>
 <tr>
 <td> You Ordered with or without toppings: <?php echo $_POST["size"].''.$_POST["toppings"]; ?></td>
   <td> Your displayed billing address is of the following: <?php echo $_POST["myAddress"]; ?></td>
   <td> Town? <?php echo $_POST["myPlace"]; ?></td>
   <td> State? <?php echo $_POST["myState"]; ?></td>
   <td> Zip Code: <?php echo $_POST["myZip"]; ?></td>
   <td>Comments?  <?php echo $_POST["myComments"]; ?></td>
 </tr>
</table> 
 
<?php

echo "In PHP"; //debugging

// Create connection
//$conn = mysqli_connect(servername, username, password, dbname);
$conn = mysqli_connect('localhost','toxtlej1','toxtlej1','toxtlej1');
$conn = mysqli_connect('localhost','buik','buik','test');
$conn = mysqli_connect('localhost','yuenr2','yuenr2','test');
$conn = mysqli_connect('localhost','goldsteinm1','goldsteinm1','test');

// Check connection The mysqli_connect_errno() function returns the error code from the last connection error.
if (mysqli_connect_errno())
  {
  echo "Failed to connect to MySQL: " . mysqli_connect_error();
  }
/*Print out database connection error the . concatenates the string comment with the connection
 error generated by MySQL */
 
// Created PHP variables
/* Retrieve the data input in the order generation page and move it to PHP variables.
In PHP, a variable starts with the $ sign, followed by the name of the variable. */
$name = $_POST['size'];
$total = $_POST['size'].''.$_POST['toppings'];
$street = $_POST['myAddress'];
$town = $_POST['myPlace'];
$zip = $_POST['myZip'];
$order_cmt = $_POST['myComments'];
$card_name = $_POST['cname'];      // a PHP variable defined and assigned to cname; cname holds name associated with card
$card_num = $_POST['ccnum'] ;      // a PHP variable defined and assigned to ccnum; ccnum holds number associated with card
$exp_month = $_POST['expmonth'];
$exp_year = $_POST['expyear'];
$card_cvv = $_POST['cvv'];

/* The INSERT INTO statement is used to insert new rows in a database table.Make a SQL query using the
 INSERT INTO statement with appropriate values, after that you will execute this insert query through passing
 it to the PHP query() function to insert data in table. */
 $sql="INSERT INTO pizza(pizza_name, pizza_total, pizza_street, pizza_town, pizza_zip, pizza_comment, payment_name, payment_number, payment_expmonth, payment_expyear, payment_cvv) VALUES  ('$name', '$total', '$street', '$town', '$zip','$order_cmt', '$card_name', '$card_num', '$exp_month', '$exp_year', '$card_cvv')";

 echo $sql;// debugging
 
/* executing insert statement to add a new row and check for an error condition. If the result is true print success message else 
	print error message and explanation. In PHPTwo of the many comparison operators used by PHP are '==' 
(i.e. equal) and '===' (i.e. identical). The difference between the two is that '==' should be used to check if the values of the 
two operands are equal or not. On the other hand, '===' checks the values as well as the type of operands.*/

if ($conn->query($sql) === TRUE) {
  echo "New record created successfully";
 echo "This SQL statement updated the database: $sql";
} else {
 echo "Error: " . $sql . "<br>" . $conn->error;
 echo "This SQL statement tried to update database: $sql";}



?>
</body>
</html>